extends ../layout.pug

block layout-content
	// Container for the spinner (initially hidden)
	#spinner-container
		.spinner
			.spinner-circle

	#loading-text
		.container2
			.centered-layout
				h1 Loading

	// Container for the success content (initially hidden)
	#success-container(style="display: none;")
		.container2
			.centered-layout
				h1 Verification Successful

				// Container to hold inline boxes using Flexbox
				.inline-box-container(style="display: flex; gap:30px; flex-direction: row; flex-wrap: wrap;justify-content: center;")
					// Iterate over each credential and display an inline box with dynamic background color and text color
					each credential, index in credentialPayloads
						- const branding = credential.credentialBranding || { backgroundColor: 'red', textColor: 'black' }
						- const imageUrl = credential.credentialBranding.image.url // Get the corresponding image URL
						.credential-box(style=`position:relative;overflow:hidden;display: flex; flex-direction: column; justify-content: flex-start; align-items: flex-start; position: relative; margin: 10px;border-radius:10px;`, id=`credential-box-${index}`)
							img(style="width: 240px; height: 150px; border-radius: 10px;")(src=imageUrl)

				h3 Requested claims extracted from credentials

				.claims-tables
					each claimType in Object.keys(presentationClaims)
						h4= claimType
						.table-container(style="overflow-x: auto;")
							table
								thead
									tr
										th Name
										th Value
								tbody
									each claim in presentationClaims[claimType]
										tr
											td= claim.name
											td= claim.value

				h3 Credentials

				// Text area to display credentials JSON format
				textarea#json-textarea.wide
					//- Display the 'credentialPayloads' JSON object
					| #{JSON.stringify(credentialPayloads, null, 2)}


	// JavaScript to show the spinner for 2 seconds and then hide it
	script.
		var credentialPayloads = !{JSON.stringify(credentialPayloads)};
		setTimeout(() => {
			const spinnerContainer = document.getElementById('spinner-container');
			const successContainer = document.getElementById('success-container');
			const loadingText = document.getElementById('loading-text');

			if (spinnerContainer && successContainer && loadingText) {
				spinnerContainer.style.display = 'none';
				successContainer.style.display = 'block';
				loadingText.style.display = 'none';
			}
			updateLayoutForExpiredCredentials(credentialPayloads);
		}, 2000); // Hide the spinner after 2000 milliseconds (2 seconds)

	block footer
		include ../footer.pug

	link(rel="stylesheet" href="/styles/index.css")
	script(src="/js/index.js")
	script(src="/js/presentation-request.js")
	script(src="/js/check-expired.js")
